@using System.Text.RegularExpressions
@implements IDisposable

@inject NavigationManager NavigationManager

<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="">Evelynn</a>
    </div>
</div>

<input type="checkbox" title="Navigation menu" class="navbar-toggler"/>

<div class="nav-scrollable" onclick="document.querySelector('.navbar-toggler').click()">
    <nav class="nav flex-column">
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="bi bi-house-door-fill-nav-menu" aria-hidden="true"></span> Home
            </NavLink>
        </div>
        


        <AuthorizeView>
            <Authorized>
                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="Account/Manage">
                        <span class="bi bi-person-fill-nav-menu" aria-hidden="true"></span> @context.User.Identity?.Name
                    </NavLink>
                </div>
                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="Projects/All">
                        <span class="bi bi-journal-book-fill-nav-menu" aria-hidden="true"></span>Projects
                    </NavLink>
                </div>
                
                @if (_currentProject != null)
                {
                    <div class="nav-item px-3">
                        <NavLink class="nav-link" href=@($"Projects/{_currentProject}/Notes")>
                            <span class="bi bi-house-door-fill-nav-menu" aria-hidden="true"></span> Notes
                        </NavLink>
                    </div>
                    <div class="nav-item px-3">
                        <NavLink class="nav-link" href=@($"Projects/{_currentProject}/Gantt")>
                            <span class="bi bi-house-door-fill-nav-menu" aria-hidden="true"></span> Gantt
                        </NavLink>
                    </div>
                }

                <div class="nav-item px-3">
                    <form action="Account/Logout" method="post">
                        <AntiforgeryToken/>
                        <input type="hidden" name="ReturnUrl" value="@currentUrl"/>
                        <button type="submit" class="nav-link">
                            <span class="bi bi-arrow-bar-left-nav-menu" aria-hidden="true"></span> Logout
                        </button>
                    </form>
                </div>

            </Authorized>
            <NotAuthorized>
                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="Account/Register">
                        <span class="bi bi-person-nav-menu" aria-hidden="true"></span> Register
                    </NavLink>
                </div>
                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="Account/Login">
                        <span class="bi bi-person-badge-nav-menu" aria-hidden="true"></span> Login
                    </NavLink>
                </div>
            </NotAuthorized>
        </AuthorizeView>
    </nav>
</div>

@code {
    private string? currentUrl;

    private int? _currentProject;
    
    protected override void OnInitialized()
    {
        currentUrl = NavigationManager.ToBaseRelativePath(NavigationManager.Uri);
        
        // Get the project ID if there is one
        var pattern = @"(?<=Projects\/)(.*?)(?=\/|$)";
        var rg = new Regex(pattern);
        var val = rg.Match(currentUrl).Value;
        _currentProject = int.TryParse(val, out var cur) ? cur : null;
        
        
        NavigationManager.LocationChanged += OnLocationChanged;
    }

    private void OnLocationChanged(object? sender, LocationChangedEventArgs e)
    {
        currentUrl = NavigationManager.ToBaseRelativePath(e.Location);
        
        // Get the project ID if there is one
        var pattern = @"(?<=Projects\/)(.*?)(?=\/|$)";
        var rg = new Regex(pattern);
        var val = rg.Match(currentUrl).Value;
        _currentProject = int.TryParse(val, out var cur) ? cur : null;
        
        StateHasChanged();
    }

    public void Dispose()
    {
        NavigationManager.LocationChanged -= OnLocationChanged;
    }

}